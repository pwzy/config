# 先看下你的 CentOS 支持哪些 shell：
cat /etc/shells
# 安装zsh
sudo apt-get install -y zsh
# 安装oh-my-zsh
https://github.com/robbyrussell/oh-my-zsh
# 如果安装时未选择默认终端，则可以使用以下命令
chsh -s /usr/bin/fish
# 改后重启或者重新登出才有效果

# 更改zsh的默认主题为 agnoster
gedit ~/.zshrc

# 终端安装powerline字体
sudo apt-get install powerline
# 重启终端即可正常显示

# 安装插件
zsh-syntax-highlighting:
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting
zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-autosuggestions.git $ZSH_CUSTOM/plugins/zsh-autosuggestions
# 还可以安装自动跳转插件： autojump 
brew install autojump
# 或者 
sudo apt-get install autojump -y

# 在plugins后括号里添加安装的插件名字
plugins=(   
            git 
            zsh-autosuggestions 
            zsh-syntax-highlighting
            autojump
            colored-man-pages
        )
        
# 编辑 /root/.oh-my-zsh/themes/agnoster.zsh-theme

# 注释掉 Main_prompt 中的 prompt_context

# 解决vim在tmux中颜色不正常问题
# 在.zshrc 或者 .bashrc 中添加以下代码即可
export TERM=xterm-256color

##################################################################################################
# 安装快速查找工具
sudo apt-get install silversearcher-ag
sudo apt-get install fzf -y

# 如果失败则 sudo apt-get upgrade  && sudo apt-get update  即可  或者用 git 安装：网 https://github.com/junegunn/fzf
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install

# 安装 powerlevel10k  网址： https://github.com/romkatv/powerlevel10k
# 使用手动安装方法，执行：

git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
echo 'source ~/powerlevel10k/powerlevel10k.zsh-theme' >>! ~/.zshrc

source ~/.zshrc 
# 运行 p10k 命令查看用法
vim ~/.p10k.zsh  # 注释掉   context （主机名称内容）

vim ~/.zhsrc 
# 添加 ranger 快捷键

alias rg=ranger


完成！

#################################################################################################
# 其他软件

brew install fzf vim nvim llvm fd bat ccat thefuck ranger autojump the_silver_searcher ripgrep node tldr lazygit lazydocker glances

######################################################################################
# fzf setting
######################################################################################

export FZF_DEFAULT_COMMAND="fd --hidden --follow -E={.git,.idea,.sass-cache,node_modules,build} \
    -E={.local,Library,.wine,.vim,anaconda3} \
    . \
    ~"

# Use \ as the trigger sequence instead of the default **
export FZF_COMPLETION_TRIGGER='\'
# Default view mode
export FZF_DEFAULT_OPTS='-m --height 80% --layout=reverse --border --preview "bat --color=always {} 2> /dev/null | head -500"'
# Options to fzf command
export FZF_COMPLETION_OPTS='--border --info=inline'

export FZF_CTRL_T_COMMAND=$FZF_DEFAULT_COMMAND
export FZF_CTRL_T_OPTS=$FZF_DEFAULT_OPTS

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
# use for vim**<tab>
_fzf_compgen_path() {
  fd --hidden --follow --exclude={.git,.idea,.sass-cache,node_modules,build} \
    --exclude={.local,Library,.wine,.vim,anaconda3} \
    . ~ "$1"
}

# Use fd to generate the list for directory completion
# use for cd**<tab>
_fzf_compgen_dir() {
  # fd --type d --hidden --follow --exclude ".git" . "$1"
  # fd --type d --hidden --follow --exclude ".git" . "$1"
  fd --hidden --follow --exclude={.git,.idea,.sass-cache,node_modules,build} \
    --exclude={.local,Library,.wine,.vim,anaconda3} \
    --type d . ~ "$1"
  # $FZF_COMMON_SETTING --type d . "$1"
}

# (EXPERIMENTAL) Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf "$@" --preview 'tree -C {} | head -200' ;;
    export|unset) fzf "$@" --preview "eval 'echo \$'{}" ;;
    ssh)          fzf "$@" --preview 'dig {}' ;;
    *)            fzf "$@" ;;
  esac
}

# setting for the fzf plug!
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
######################################################################################





