# 
lspci | grep VGA

# 卸载原有的驱动
sudo apt-get remove --purge nvidia-*

运行 lsmod | grep nouveau，如果有输出则代表nouveau正在加载。需要我们手动禁掉nouveau。

sudo gedit /etc/modprobe.d/blacklist.conf
在末尾加入
blacklist nouveau
options nouveau modeset=0
然后保存，之后更新
sudo update-initramfs -u

# 重启运行以下命令如果无输出则禁用成功
lsmod | grep nouveau

# 安装gcc ，直接 sudo apt-get install build-essential 安装必要的工具后对gcc和g++进行降级

# 根据驱动要求决定是否需要降级或者升级

sudo apt-get install -y gcc-7
sudo apt-get install -y g++-7

# 建立软连接进行降级
cd /usr/bin
sudo rm gcc
sudo ln -s gcc-7 gcc
sudo rm g++
sudo ln -s g++-7 g++

# 检查gcc版本是否降级成功
gcc --version

# 安装nvidia驱动

# 先禁用X-Window服务，安装显卡驱动需要禁用该服务，否则会安装终止，并出现相应需要禁用该服务的错误。（不是必要的）
sudo service lightdm stop
或者
sudo /etc/init.d/lighdm stop

sudo ./nvidia-XXX --no-opengl-files --no-nouveau-check --no-x-check

# 安装完成后重新启动桌面服务
sudo service lightdm start


# 安装anaconda 后出现 base
# 命令行执行：
conda config --set auto_activate_base False

# 编辑 .zshrc 或者 .bashrc 加入python的路径
sudo gedit ~/.bashrc 
sudo gedit ~/.zshrc  
# 加入
# setting for anaconda python  一定要全路径不能用～代表家目录
export PATH="/home/jing/anaconda3/bin:$PATH"


##############################################################################################
# 添加自启动脚本
##############################################################################################
1. 在 /etc/systemd/system 目录下创建软链接
  sudo ln -s /lib/systemd/system/rc-local.service /etc/systemd/system/
2. 修改服务文件，
  sudo vim /lib/systemd/system/rc-local.service
  在文件尾部中添加：
  
  [Install]
  WantedBy=multi-user.target
  Alias=rc-local.service
  
3. 创建自启动脚本
  sudo vim /etc/rc.local
4. 并添加以下内容： #不能添加阻塞进程 不然开机卡死
  #!/bin/sh
  echo "看到这行字，说明添加自启动脚本成功。" > /usr/local/test.log
  exit 0
5. 给rc.local加上权限
  sudo chmod 755 /etc/rc.local
6. 测试脚本是否成功
  systemctl restart rc-local
  
##############################
(cd /home/jing && nohup ./frp/frpc -c ./frp/frpc.ini &)

##############################################################################################
# rc-local.service 的内容
##############################################################################################

[Unit]
Description=/etc/rc.local Compatibility
Documentation=man:systemd-rc-local-generator(8)
ConditionFileIsExecutable=/etc/rc.local
After=network.target

[Service]
Type=forking
ExecStart=/etc/rc.local start
TimeoutSec=0
RemainAfterExit=yes
GuessMainPID=no

[Install]
WantedBy=multi-user.target
Alias=rc-local.service
##############################################################################################

##############################################################################################
# apt 镜象源
##############################################################################################

sudo cp /etc/apt/sources.list  /etc/apt/sources.list.bak
sudo vim /etc/apt/sources.list 
sudo nano /etc/apt/sources.list 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 中科大：
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# 默认注释了源码仓库，如有需要可自行取消注释
deb https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse
# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal main restricted universe multiverse

deb https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse
# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-security main restricted universe multiverse

deb https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse
# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-updates main restricted universe multiverse

deb https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse
# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-backports main restricted universe multiverse

# 预发布软件源，不建议启用
# deb https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse
# deb-src https://mirrors.ustc.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 清华：
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse

# 预发布软件源，不建议启用
# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse
# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 阿里：
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse


##############################################################################################
# 安装软件
##############################################################################################
sudo apt install build-essential net-tools aptitude vim proxychains


##############################################################################################
# 配置软件
##############################################################################################
%%%%%%%%%%%%%%%%%%%%%%%%%%
# 配置proxychains
%%%%%%%%%%%%%%%%%%%%%%%%%%
sudo vim /etc/proxychains.conf
编辑最后一行
socks5  127.0.0.1 7890
%%%%%%%%%%%%%%%%%%%%%%%%%%
# 配置别名
%%%%%%%%%%%%%%%%%%%%%%%%%%
sudo vim ~/.bashrc

alias update="source ~/.zshrc"
alias rg="ranger "
alias ezsh="nvim ~/.zshrc"
alias ebash="nvim ~/.bashrc"
alias ealias="nvim ~/.config/zsh/aliases.zsh"
alias eenv="nvim ~/.config/zsh/env.zsh"
alias eclash="nvim ~/.local/share/clash/config.yaml"
alias eproxychains="sudo nvim /etc/proxychains.conf"

alias czsh="cat ~/.zshrc"
alias cbash="cat ~/.bashrc"
alias calias="lolcat ~/.config/zsh/aliases.zsh"
alias cenv="lolcat ~/.config/zsh/env.zsh"
alias cclash="local ~/.local/share/clash/config.yaml"
alias cproxychains="lolcat /etc/proxychains.conf"

alias cdzsh="cd ~/.config/zsh"
alias cdvim="cd ~/.config/nvim"
alias cdranger="cd ~/.config/ranger"

alias ta="tmux attach-session -t "
alias tn="tmux new-session -t "
alias tk="tmux kill-session -t "
alias tl="tmux ls"
alias tp="tmuxp load "

alias vpn="export https_proxy=http://10.16.142.1:7890 http_proxy=http://10.16.142.1:7890"
alias macvpn="export https_proxy=http://10.16.4.72:7890 http_proxy=http://10.16.4.72:7890"
alias localvpn="export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890"
alias autosshvpn="export https_proxy=http://127.0.0.1:9990 http_proxy=http://127.0.0.1:9990"
alias sshvpn="export https_proxy=http://43.131.72.28:7890 http_proxy=http://43.131.72.28:7890"

alias devpn="export https_proxy='' http_proxy='' all_proxy=''"
alias vpninfo='echo -e https_proxy:"\t" $https_proxy "\n"http_proxy:"\t" $http_proxy  "\n"all_proxy:"\t" $all_proxy'

%%%%%%%%%%%%%%%%%%%%%%%%%%
# 配置环境变量
%%%%%%%%%%%%%%%%%%%%%%%%%%
export http_proxy="http://localhost:7890"
export https_proxy="http://localhost:7890"

